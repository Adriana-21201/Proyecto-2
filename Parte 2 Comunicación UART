//ESP32

#include <Arduino.h>

//Pines para la lectura del ADC y el botón
#define pinADC 34 //Pin del sensor de temperatura LM35
#define ADC_VREF_mV 3300.0 //Voltaje de referencia de 3.3 V
#define ADC_RESOLUTION 4096.0 //Resolución del ADC para conversión de la temperatura

int estadoBtn = 0; //estado inicial del botón
int estadoFinal = 0; //estado final del botón
int adcRaw = 0; //valor crudo del ADC

void setup() {
  Serial.begin(115200);
  Serial2.begin(115200);

}

void loop() {
  if(Serial2.available() > 0) {
    char pato = Serial2.read(); //Caracter para que se lea el valor de la temperatura
    if(pato == 'M') {
      int adcVal = analogRead(pinADC);
      float milliVolt = adcVal * (ADC_VREF_mV / ADC_RESOLUTION); //Conversión del voltaje a temperatura
      float temp = milliVolt / 5;
      Serial.print("Temperatura: "); //muestra la temperatura leída 
      Serial.print(temp);
      Serial.println(" °C"); //sistema en Celsius

      char tempData[8];
      dtostrf(temp, 4, 2, tempData);
      Serial2.print(tempData); //Despliega el valor de la temperatura en el monitor serial. 
    }
  }      
}

//TIVA C

void loop() {
  temperatura = digitalRead(tomarTemp);
  guardar = digitalRead(guardarDato);

  if(temperatura == LOW && lastTemp == HIGH) {
    Serial2.print("M");
    tone(pinBocina, 349, 250);
    tone(pinBocina, 261, 250);
    tone(pinBocina, 294, 250);
    tone(pinBocina, 329, 250);
    tone(pinBocina, 349, 250);
    tone(pinBocina, 391, 250);
  }

  if(guardar == LOW && lastData == HIGH) {
    tone(pinBocina, 740, 250);
    tone(pinBocina, 830, 250);
    tone(pinBocina, 880, 250);
  }

  if(Serial2.available() > 0) {
    tempThng = Serial2.readStringUntil('/n');
  }

  String texto1 = "La temperatura";
  LCD_Print(texto1, 10, 100, 2, 0xffff, 0x00);

  String texto2 = "actual es de: ";
  LCD_Print(texto1, 10, 150, 2, 0xffff, 0x00);
}

